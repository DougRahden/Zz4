# === Cell 10: PyVis interactive co-authorship network ===

from pyvis.network import Network
import pandas as pd
from collections import defaultdict

# Load data
entity_df = pd.read_csv("D:/aa030/output/entity_resolution_output.csv")
primary_df = pd.read_csv("D:/aa030/output/primary_coauthor_output.csv")
secondary_df = pd.read_csv("D:/aa030/output/secondary_coauthor_output.csv")

# List of countries to flag in bright red
red_flag_countries = [
    "Russia", "Iran", "North Korea", "China", "Cuba", "Syria", "Venezuela",
    "Belarus", "Pakistan", "Afghanistan", "Sudan", "Myanmar", "Nicaragua",
    "Zimbabwe", "Iraq", "Libya", "Lebanon", "Yemen", "Eritrea", "Turkmenistan",
    "Uzbekistan", "Kazakhstan"
]

# Collect node metadata
node_labels = {}
node_colors = {}
affiliation_map = defaultdict(set)

# Initial entity
for _, row in entity_df.iterrows():
    sid = row['scopus_id']
    label = f"{row['matched_name']}\n{sid}"
    node_labels[sid] = label
    node_colors[sid] = 'gray'

# Primary co-authors
for _, row in primary_df.iterrows():
    sid = row['coauthor_scopusid']
    affil = row['coauthor_affiliation']
    city = row.get('coauthor_affiliation_city', '')
    country = row.get('coauthor_affiliation_country', '')
    node_colors[sid] = 'blue'
    affiliation_map[sid].add(f"{affil}, {city}, {country}".strip(', '))

# Secondary co-authors
for _, row in secondary_df.iterrows():
    sid = row['2ndcoauthor_scopusid']
    affil = row['2ndcoauthor_affiliation']
    city = row.get('2ndcoauthor_affiliation_city', '')
    country = row.get('2ndcoauthor_affiliation_country', '')
    if sid not in node_colors:
        node_colors[sid] = 'brown'
    affiliation_map[sid].add(f"{affil}, {city}, {country}".strip(', '))

# Build node labels
final_labels = {}
for sid, base_label in node_labels.items():
    final_labels[sid] = base_label
for sid in affiliation_map:
    base = final_labels.get(sid, sid)
    affils = "\n" + "\n".join(sorted(affiliation_map[sid]))
    final_labels[sid] = str(base) + str(affils)

# Flag nodes with countries of concern
flagged_nodes = set()
for sid, affils in affiliation_map.items():
    for a in affils:
        for country in red_flag_countries:
            if any(part in a.lower() for part in country.lower().split()):
                node_colors[sid] = 'red'
                flagged_nodes.add(sid)
                break

# Build edges
edge_weights = defaultdict(int)

# Initial ↔ Primary
initial_id = entity_df.iloc[0]['scopus_id']
for _, row in primary_df.iterrows():
    target = row['coauthor_scopusid']
    edge_weights[(initial_id, target)] += 1

# Primary ↔ Secondary
for _, row in secondary_df.iterrows():
    source = row['coauthor_scopusid']
    target = row['2ndcoauthor_scopusid']
    edge_weights[(source, target)] += 1

# Build the graph
net = Network(height='1000px', width='100%', bgcolor='#ffffff', font_color='black')

# Add nodes
for sid, label in final_labels.items():
    color = node_colors.get(sid, 'lightgray')
    font = {'color': 'red', 'size': 18, 'bold': True} if sid in flagged_nodes else {}
    net.add_node(sid, label=label, color=color, title=label, font=font)

# Add edges
for (source, target), weight in edge_weights.items():
    color = 'red' if source in flagged_nodes or target in flagged_nodes else '#cccccc'
    net.add_edge(source, target, value=weight, title=f"{weight} shared papers", color=color)

# Save the interactive graph
net.show("D:/aa030/output/coauthorship_graph.html")
print("[SAVED] D:/aa030/output/coauthorship_graph.html")
