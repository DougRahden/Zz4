# === Cell 10: Summary Graph by Country per Primary Co-Author ===

from pyvis.network import Network
import pandas as pd
from collections import defaultdict

# Load data
entity_df = pd.read_csv("D:/aa030/output/entity_resolution_output.csv")
primary_df = pd.read_csv("D:/aa030/output/primary_coauthor_output.csv")
secondary_df = pd.read_csv("D:/aa030/output/secondary_coauthor_output.csv")

# Red-flag country list
red_flag_countries = [
    "COUNTRY NAME 1 HERE", "COUNTRY NAME 2 HERE", "COUNTRY NAME 3 HERE", "COUNTRY NAME 4 HERE",
    "COUNTRY NAME 5 HERE", "COUNTRY NAME 6 HERE", "COUNTRY NAME 7 HERE", "COUNTRY NAME 8 HERE",
    "COUNTRY NAME 9 HERE", "COUNTRY NAME 10 HERE", "COUNTRY NAME 11 HERE", "COUNTRY NAME 12 HERE",
    "COUNTRY NAME 13 HERE", "COUNTRY NAME 14 HERE", "COUNTRY NAME 15 HERE", "COUNTRY NAME 16 HERE",
    "COUNTRY NAME 17 HERE", "COUNTRY NAME 18 HERE", "COUNTRY NAME 19 HERE", "COUNTRY NAME 20 HERE",
    "COUNTRY NAME 21 HERE", "COUNTRY NAME 22 HERE"
]

# Map: coauthor_scopusid â†’ list of country counts from secondary coauthors
secondary_country_counts = defaultdict(lambda: defaultdict(int))
for _, row in secondary_df.iterrows():
    co_id = row['coauthor_scopusid']
    country = str(row['2ndcoauthor_affiliation_country']).strip()
    if country:
        secondary_country_counts[co_id][country] += 1

# Start graph
net = Network(height='1000px', width='100%', bgcolor='#ffffff', font_color='black')

# Add initial entity node
initial = entity_df.iloc[0]
initial_id = initial['scopus_id']
initial_label = f"{initial['matched_name']}\n{initial_id}"
net.add_node(str(initial_id), label=initial_label, color='gray', title=initial_label)

# Build primary co-author nodes
primary_counts = defaultdict(int)
for _, row in primary_df.iterrows():
    pid = str(row['coauthor_scopusid'])
    pname = row['coauthor_name']
    affil = row['coauthor_affiliation']
    city = row.get('coauthor_affiliation_city', '')
    country = row.get('coauthor_affiliation_country', '')

    affil_line = f"{affil}, {city}, {country}".strip(', ')
    summary_lines = [f"{pname}\n{pid}", affil_line]

    if pid in secondary_country_counts:
        summary_lines.append("\n--- Secondary Coauthors ---")
        for c, count in sorted(secondary_country_counts[pid].items(), key=lambda x: -x[1]):
            summary_lines.append(f"{count} from {c}")

    full_label = "\n".join(summary_lines)

    is_red_flag = str(country).lower() in [str(r).lower() for r in red_flag_countries] or \
                  any(str(c).lower() in [str(r).lower() for r in red_flag_countries] for c in secondary_country_counts[pid])

    net.add_node(pid, label=full_label, color='red' if is_red_flag else 'blue',
                 font={'color': 'red', 'bold': True} if is_red_flag else {}, title=full_label)
    primary_counts[pid] += 1
    if str(initial_id) in net.node_ids and str(pid) in net.node_ids:
        net.add_edge(str(initial_id), str(pid), value=primary_counts[pid], title="linked")

# Output
net.write_html("D:/aa030/output/coauthorship_country_summary_graph.html")
print("[SAVED] D:/aa030/output/coauthorship_country_summary_graph.html")
